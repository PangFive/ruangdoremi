@set('canComment', typeof canComment == 'boolean' ? canComment : true)

<ol class="ml-8">
  @each(comment in nodeComments)
    @set('childComments', comments.filter(c => c.replyTo === comment.id))
    @set('rootParentId', comment.replyTo ? rootParentId : comment.id)
    @set('replyTo', comment.id)
    @set('levelIndex', levelIndex ? levelIndex + 1 : 1)
    @set('isAnon', !comment.userId)
    @set('userLiked', comment.userVotes.find(v => v.meta.pivot_user_id === auth.user?.id))

    <li class="relative" id="comment{{ comment.id }}">
      <div class="bg-slate-100 rounded-xl p-3 lg:p-6 mb-6 group relative"
        :class="window.location.hash == `#comment{{ comment.id }}` ? 'border border-brand-600' : ''">
        <div class="mb-5 flex items-center">
          @if (isAnon)
            <div class="w-14 h-14 rounded-xl mr-3 bg-slate-200 overflow-hidden relative">
              @!icons.user({ className: 'w-14 h-14 text-slate-600 absolute -bottom-1 left-0' })
            </div>
            <div class="flex flex-col">
              <h6 class="text-base font-semibold">
                Anonymous <span class="text-sm font-normal">({{ comment.name }})</span>
              </h6>
              <div class="text-slate-400 text-xs">
                Commented <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span>
              </div>
            </div>
          @else
            @profiles.link({ user: comment.user })
              <img src="{{ comment.user.avatar }}" class="w-14 h-14 rounded-xl mr-3" />
            @end
            <div class="flex flex-col">
              <h6 class="text-base font-semibold">
                @profiles.link({ user: comment.user })
                  {{ comment.user.username }}
                @end
              </h6>
              <div class="flex items-center gap-6 text-xs">
                @if (!comment.user.isFreeTier)
                  <img class="logo-white h-2.5 relative" src="/imgs/adocasts-plus-white-40.png" alt="Adocasts+" />
                  <img class="logo-black h-2.5 relative" src="/imgs/adocasts-plus-black-40.png" alt="Adocasts+" />
                @endif
              </div>
              @if (lessonRequest && lessonRequest.approveCommentId === comment.id)
                <div class="text-green-500 text-xs">
                  <span class="tracking-wider uppercase">Request approved </span>
                  <span class="text-slate-600">
                    <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span> with the following comment
                  </span>
                </div>
              @elseif (lessonRequest && lessonRequest.rejectCommentId === comment.id)
                <div class="text-red-500 text-xs">
                  <span class="tracking-wider uppercase">Request closed</span>
                  <span class="text-slate-600">
                    <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span> with the following comment
                  </span>
                </div>
              @elseif (lessonRequest && lessonRequest.completeCommentId === comment.id)
                <div class="text-green-500 text-xs">
                  <span class="tracking-wider uppercase">Request completed </span>
                  <span class="text-slate-600">
                    <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span> with the following comment
                  </span>
                </div>
              @else
                <div class="text-slate-600 text-xs">
                  Commented <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span>
                </div>
              @endif
            </div>
          @endif
        </div>

        <div>
          <div x-show="editId !== {{ comment.id }}" class="prose !max-w-full text-slate-800">{{{ comment.bodyDisplay }}}</div>

          @can('CommentPolicy.update', comment, identity)
            <div x-show="editId === {{ comment.id }}">
              @!comments.form({
                ...comment.serialize(),
                cancelable: true,
                onCancel: 'cancel()'
              })
            </div>
          @endcan

          <div x-show="editId !== {{ comment.id }}" class="flex items-center space-x-2 mt-6 group">
            @if (auth.user && comment.stateId !== States.ARCHIVED)
              @form.patch({ action: route('comments.like', { id: comment.id }), attrs: 'up-submit up-scroll="preserve"' })
                <button 
                  type="submit" 
                  class="btn-hover-fill text-slate-900 hover:text-slate-950 transition flex items-center text-sm bg-slate-200 rounded-lg py-1 px-3 {{ userLiked && 'active' }}" 
                  @click="$el.classList.toggle('active'); $el.querySelector('.btn-count').textContent = '⌁'">
                  <div class="w-5 h-5 mr-3 relative">
                    @!icons.heart({ className: 'btn-outline w-5 h-5 absolute top-0 left-0' })
                    @!icons.heartFilled({ className: `btn-filled w-5 h-5 text-slate-800 absolute top-0 left-0` })
                  </div>
                  <span class="btn-count">{{ comment.userVotes.length }}</span>
                </button>
              @end
            @elseif (comment.stateId !== States.ARCHIVED)
              <div class="btn-hover-fill text-slate-900 transition flex items-center text-sm bg-slate-200 opacity-50 rounded-lg py-1 px-3">
                <div class="w-5 h-5 mr-3 relative text-slate-600 dark:text-slate-400">
                  @!icons.heart({ className: `btn-filled w-5 h-5 absolute top-0 left-0 !opacity-100` })
                </div>
                <span class="btn-count">{{ comment.userVotes.length }}</span>
              </div>
            @endif

            @can('CommentPolicy.reply', comment)
              @if (canComment)
                <button type="button" @click="create( {{ comment.id }} )"
                  class="text-slate-900 hover:text-slate-950 transition flex items-center gap-3 text-sm bg-slate-200 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
                  @!icons.messageTwo()
                  Reply
                </button> 
              @endif
            @endcan

            @if (!auth.user && canComment)
              <p class="opacity-0 group-hover:opacity-100 text-sm duration-150 ml-6">
                Please
                <a href="{{ route('auth.signin') }}" up-layer="new modal" up-size="grow" class="anchor link-alt">
                  sign in
                </a>
                or 
                <a href="{{ route('auth.signup') }}" up-layer="new modal" up-size="grow" class="anchor link-alt">
                  sign up for free
                </a>
                to reply
              </p>
            @endif

            @can('CommentPolicy.update', comment, identity)
              <button type="button" @click="edit( {{ comment.id }} )"
                class="text-blue-400 hover:text-blue-500 transition flex items-center gap-3 text-sm bg-slate-200 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
                @!icons.edit()
                Edit
              </button>
            @endcan

            @can('CommentPolicy.delete', comment, identity)
              @form.delete({ action: route('comments.destroy', { id: comment.id }), attrs: 'up-submit up-scroll="preserve" up-confirm="Your comment will be deleted, would you like to continue?"' })
                <button type="submit"
                  class="text-red-400 hover:text-red-500 transition flex items-center gap-3 text-sm bg-slate-200 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
                  @!icons.trash()
                  Delete
                </button>
              @end
            @endcan
          </div>
        </div>
      </div>

      @can('CommentPolicy.reply', comment, identity)
        {{-- reply to form --}}
        <div x-show="createId === {{ comment.id }}" class="bg-slate-100 border border-slate-200 p-3 rounded-xl ml-8 mb-3">
          @!comments.form({
            postId,
            lessonRequestId,
            rootParentId,
            replyTo,
            levelIndex,
            cancelable: true,
            onCancel: 'cancel()'
          })
        </div>
      @endcan

      @if (childComments.length)
        @!comments.list({
          postId,
          lessonRequestId,
          rootParentId,
          comments,
          levelIndex,
          nodeComments: childComments,
        })
      @endif
    </li>
  @endeach
</ol>