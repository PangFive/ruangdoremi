@layout('layouts/app')

@section('meta')

@!meta.tags({
  url: route('schedule'),
  title: "Content Schedule",
  desc: "Planned schedule for future Adocasts content.",
  asset: null,
  index: true
})

@endsection

@section('hero')

  @!headings.hero({
    title: 'Content Schedule',
    subtitle: `Current content schedule for planned Adocasts content, subject to change.`
  })

@endsection

@section('content')

  <ul role="list" class="divide-y divide-slate-200/50 bg-slate-100 px-6 rounded-xl">
    @each (item in schedule.results)
      @set('dte', item.properties['Date'].date ? DateTime.fromFormat(item.properties['Date'].date.start, 'yyyy-MM-dd') : null)
      @set('status', item.properties['Status'].status?.name)
      @set('series', item.properties['Series'].select?.name)

      <li class="flex items-center justify-between gap-x-6 py-5">
        <div class="flex items-center">
          <div class="hidden lg:flex flex-col justify-center w-36 mr-6">
            @if (status === 'Done')
              <p style="font-size: .65rem;" class="text-slate-600 uppercase tracking-wider">Released</p>
            @else
              <p style="font-size: .65rem;" class="text-slate-600 uppercase tracking-wider">Scheduled</p>
            @endif
            @if (dte)
              <time datetime="{{ dte.toISO() }}">{{ dte.toFormat('MMM dd, yyyy')}}</time>
            @else
              Pending
            @endif
          </div>
          <div class="min-w-0">
            @if (series)
              <span class="text-sm truncate text-slate-400 lg:hidden">{{ series }}</span>
            @endif
            <div class="flex items-start gap-x-3">
              <a href="/schedule/{{ item.id }}" up-layer="new modal" up-size="grow" class="text-sm md:text-base font-semibold leading-6 text-slate-900 hover:underline">
                {{ item.properties['Name'].title.map(x => x.text.content).join(', ') }}
              </a>
              @if (status === 'Done')
                <p class="rounded-md whitespace-nowrap mt-0.5 px-1.5 py-0.5 text-xs font-medium ring-1 ring-inset text-green-700 bg-green-50 ring-green-600/20">
                  {{ status }}
                </p>
              @elseif (status === 'In progress')
                <p class="rounded-md whitespace-nowrap mt-0.5 px-1.5 py-0.5 text-xs font-medium ring-1 ring-inset text-blue-700 bg-blue-50 ring-blue-600/20">
                  {{ status }}
                </p>
              @elseif (status === 'Planning')
                <p class="rounded-md whitespace-nowrap mt-0.5 px-1.5 py-0.5 text-xs font-medium ring-1 ring-inset text-slate-600 bg-slate-200 ring-slate-500/10">
                  {{ status }}
                </p>
              @elseif (status === 'Not started')
                <p class="rounded-md whitespace-nowrap mt-0.5 px-1.5 py-0.5 text-xs font-medium ring-1 ring-inset text-slate-600 bg-slate-100 ring-slate-500/10">
                  {{ status }}
                </p>
              @endif
            </div>
            <div class="mt-1 flex items-center gap-x-2 text-xs leading-5 text-slate-600">
              @if (status === 'Done')
                <p class="lg:hidden whitespace-nowrap">
                  Released 
                  @if (dte)
                    <time datetime="{{ dte.toISO() }}">{{ dte.toFormat('MMM dd, yyyy')}}</time>
                  @endif
                </p>
              @else
                <p class="lg:hidden whitespace-nowrap">
                  Planned for release 
                  @if (dte)
                    <time datetime="{{ dte.toISO() }}">{{ dte.toFormat('MMM dd, yyyy')}}</time>
                  @endif
                </p>
              @endif
              @if (series)
                <p class="hidden lg:block whitespace-nowrap">{{ series }}</p>
              @endif
              <svg viewBox="0 0 2 2" class="h-0.5 w-0.5 fill-current {{ !series ? 'lg:hidden' : '' }}">
                <circle cx="1" cy="1" r="1" />
              </svg>
              @if (item.properties['Requested By'].rich_text)
                <p class="truncate">Requested by {{ item.properties['Requested By'].rich_text.map(x => x.text.content).join(', ') || 'N/A' }}</p>
              @endif
            </div>
          </div>
        </div>
        <div class="flex-none items-center gap-x-4 hidden md:flex">
          @if (status === 'Done' && item.properties['URL'])
            @buttons.primary.inverse({ href: item.properties['URL'].url, attrs: 'up-follow' })
              View Content<span class="sr-only">, {{ item.properties['Name'].title.map(x => x.text.content).join(', ') }}</span>
            @end
          @elseif (status === 'Done')
            <div class="border border-transparent bg-slate-100/50 text-slate-600 shadow-sm px-4 py-2 rounded-md text-sm font-medium">
              Released
            </div>
          @else
            <div class="border border-transparent bg-slate-100/50 text-slate-600 shadow-sm px-4 py-2 rounded-md text-sm font-medium">
              Coming Soon
            </div>
          @endif
        </div>
      </li>
    @endeach
  </ul>

@endsection
